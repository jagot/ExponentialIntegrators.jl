#+TITLE: ExponentialIntegrators.jl
#+AUTHOR: Stefanos Carlström
#+EMAIL: stefanos.carlstrom@gmail.com

Linear differential equations (LDEs) of the kind
#+BEGIN_EXAMPLE
  uₜ = L(t)u
#+END_EXAMPLE
have the solution
#+BEGIN_EXAMPLE
  u(t) = 𝒰(t,0)u(0)
#+END_EXAMPLE
where =𝒰(t,0)= is the /propagator/ that takes =u= from time =0= to
time =t=. The propagator can formally be written as
#+BEGIN_EXAMPLE
  𝒰(t,0) = exp[∫_0^t dt L(t)].
#+END_EXAMPLE
In practice, the propagator is approximated via time-stepping:
#+BEGIN_EXAMPLE
  𝒰(t,0) = exp(Lₙ)exp(Lₙ₋₁)...exp(L₁),
#+END_EXAMPLE
where =Lᵢ= is an approximation of the integral of the operator =L=
over the time interval =[(i-1)Δt,iΔt]=, where =Δt= is the time-step.

Usually, =L= can be written as a sum of many operators:
#+BEGIN_EXAMPLE
L = A + B + C + D ...
#+END_EXAMPLE
We may then further approximate =exp(Lᵢ)= by exponentiating the
sub-operators separately, and arranging them in such a way that the
error introduced by this /splitting/ is minimized. A classical example
is the so-called /Strang splitting/, in which
#+BEGIN_EXAMPLE
exp[Δt(A+B)] = exp(ΔtB/2) exp(ΔtA) exp(ΔtB/2) + 𝒪{exp(Δt³[A,B])},
#+END_EXAMPLE
where =[A,B]≝AB-BA= is the /commutator/ between =A= and =B=, which is,
in general, non-zero.

There are thus a few components to exponential operators:
1) identifying a good splitting of =L=
2) integrating the sub-operators over the time-step to high-enough
   order
   - For operators of the form =A(t) = f(t)B=, where =B= is
     time-independent and =f(t)= is a scalar function, it is enough to
     integrate =f(t)=.
3) implementing efficient exponentiation of the sub-operators
   separately
   - We here further adopt the following scheme: =exp(μΔtA)=, where
     =Δt= is the actual time-step and =μ= is an additional scalar. The
     reason for this is that if =A= is e.g. Hermitian, and =μ= is
     imaginary, we can still use the Lanczos method for computing a
     Krylov subspace and apply =μ= at a later stage.
4) arranging the different exponentials properly
